<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=global.vit;
image_angle=global.angle;
image_xscale=global.scale;
image_yscale=global.scale;
img_index=0;
sprite_index=object_container.sprites[global.selected_animation,img_index];
temp=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=global.vit;
image_angle=global.angle;
image_xscale=global.scale;
image_yscale=global.scale;

if image_speed &gt; 0{
    if image_index+image_speed &gt;= 1{
        if img_index = array_length_2d(object_container.sprites,global.selected_animation)-1{
            image_index = image_index+image_speed-1;
            img_index=0;
            show_debug_message("Animation_completed in "+string(temp)+" steps.");
            temp=0;
            }
        else{
            img_index++;
            }
        }
    }
else{
    if image_speed &lt; 0{
        if image_index+image_speed &lt;= 0{
            if img_index = 0 {
                image_index = 1+(image_index+image_speed);
                img_index=array_length_2d(object_container.sprites,global.selected_animation)-1
                show_debug_message("Animation_completed in "+string(temp)+" steps.");
                temp=0;
                }
            else{
                img_index--;
                }
            }
        }
    }
sprite_index=object_container.sprites[global.selected_animation,img_index];
x=(room_width/2)-(sprite_width/2)
y=(room_height/2)-(sprite_height/2)
temp++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
