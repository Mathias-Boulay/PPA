<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_parts</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0;
Final="";
value=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gestion de l'apparence/fonction de la partie.
if value != 0{
    //La valeur à été transmise, il est temps de définir ce qu'il y a à l'intérieur du bouton.
    image_index = value;
    switch(value){
        case 1:
            Final=get_string("Quel titre ?","NOONE");
            break;
            
        case 2:
            Final=get_string("Quel sous titre violet ?","NOONE");
            break;
        
        case 3:
            Final=get_string("Quel sous titre ?","NOONE");
            break;
            
        case 4:
            Final=get_string("Quel petit titre violet ?","NOONE");
            break;
            
        case 5:
            Final=get_string("Quel petit titre ?","NOONE");
            break;
            
        case 6:
            Final=get_string("Quelle texte syntaxé ?","NOONE");
            break;
        case 7:
            for(i=0;i&gt;-1;i++){
                Temp=get_string("Quel Argument ?","NOONE");
                if Temp != "NOONE"{
                    Final[i,0]=Temp;
                    Final[i,1]=get_string("Quel type d'argument ?","NOONE");
                    Final[i,2]=get_string("Quel description ?","NOONE");
                    }
                else{
                    //On n'a pas mis d'argument, go s'arêtter.
                    i= -40;
                    }
                }
            break;
        case 8:
            Final[0]=show_question("L'image doit-elle être aligné à gauche ? # Sinon elle sera aligné sur la droite");
            Final[1]=get_string("Quel texte à mettre ? (Laisser NOONE pour ne rien mettre","NOONE");
            break;
        case 9:
            Final=get_string("Quel paragraphe ?","Bichour les gens !");
            break;
    
    
        }
    value = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.pressedID!=id{
    y=(sprite_height/2);
    x=room_width-(sprite_width/2);
    
    while(place_meeting(x,y,all) ){
        y+=sprite_height;
        }
    if global.pressedID !=""{
        if global.pressedID.y &lt;= y{
            y+=sprite_height;
            while(place_meeting(x,y,all)){
                y+=sprite_height;
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.pressedID=id{
if !place_meeting(x,y,object_bin){
        //Ensuite:
        y=(sprite_height/2);
        x=room_width-(sprite_width/2);
        
        while(place_meeting(x,y,all)){
            y+=sprite_height;
            }
        global.pressedID="";
        }
    else{
        global.pressedID="";
        instance_destroy();
        }
        
    instance_destroy(object_bin);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.pressedID=id{
    y=mouse_y;
    x=room_width-(sprite_width*1.5);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(image_index){
    case 1:
        Final=get_string("Quel titre ?",Final);
        break;
        
    case 2:
        Final=get_string("Quel sous titre violet ?",Final);
        break;
    
    case 3:
        Final=get_string("Quel sous titre ?",Final);
        break;
        
    case 4:
        Final=get_string("Quel petit titre violet ?",Final);
        break;
        
    case 5:
        Final=get_string("Quel petit titre ?",Final);
        break;
        
    case 6:
        Final=get_string("Quelle texte syntaxé ?",Final);
        break;
    case 7:
        for(i=0;i&gt;-1;i++){
            if i&lt;= array_height_2d(Final)-1{
                Temp=get_string("Quel Argument ?",Final[i,0]);
                if Temp != "NOONE"{
                    Final[i,0]=Temp;
                    Final[i,1]=get_string("Quel type d'argument ?",Final[i,1]);
                    Final[i,2]=get_string("Quel description ?",Final[i,2]);
                    }
                else{
                    //On n'a pas mis d'argument, go s'arêtter.
                    i= -40;
                    }
                }
            else{
                i= -40;
                }
            }
        break;
    case 8:
        Final[0]=show_question("L'image doit-elle être aligné à gauche ? # Sinon elle sera aligné sur la droite");
        Final[1]=get_string("Quel texte à mettre ? (Mettre NOONE pour ne rien mettre",Final[1]);
        break;
    case 9:
        Final=get_string("Quel paragraphe ?",Final);
        break;


    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.pressedID=id;
instance_create(room_width-(sprite_width*1.5),room_height-32,object_bin)
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
