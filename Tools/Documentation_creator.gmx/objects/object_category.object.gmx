<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_reverse_tag</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialisation et placement
ID=instance_number(object_category);
cat=ini_read_string("category",string(ID),"///");
x=view_xview[0]+(view_wview[0]/2)+61;
//Piqué du code des parts.
dir_y=0;
pos=0;
OBJECTIVE="";
y=(sprite_height/2);
y+=sprite_height*(instance_number(object_category)-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Placement
if global.pressedID =""{
    if mouse_x &gt;= x-(sprite_width/2) &amp;&amp; mouse_x &lt;= x+(sprite_width/2) &amp;&amp; mouse_y &gt;= y-(sprite_height/2) &amp;&amp; mouse_y &lt;= y+(sprite_height/2){
        //La souris est sur notre position:
        //Placement horizontal:
        if abs(view_xview[0]+(view_wview[0]/2)-80-x) &lt; 0.4{
            x= view_xview[0]+(view_wview[0]/2)-80;
            }
        else{
            x+= (view_xview[0]+(view_wview[0]/2)-80-x)/8;
            }
    
        }
    else{
        //La souris n'est pas sur notre position
        //Placement Horizontal:
        if abs(view_xview[0]+(view_wview[0]/2)-60-x) &lt; 0.4{
            x= view_xview[0]+(view_wview[0]/2)-60;
            }
        else{
            x+= (view_xview[0]+(view_wview[0]/2)-60-x)/8;
            } 
        }
    }
else{
    if global.pressedID!=id{ //On se range lors de la réorganisation.
        if abs(view_xview[0]+(view_wview[0]/2)-60-x) &lt; 0.4{
            x= view_xview[0]+(view_wview[0]/2)-60;
            }
        else{
            x+= (view_xview[0]+(view_wview[0]/2)-60-x)/8;
            }
        }
    }
    
    
///Vertical
if global.pressedID!=id{
    if global.pressedID!=""{//Il y a un élu:
        tmp=sign(global.pressedID.y-y);
        if tmp=pos{
            OBJECTIVE=y-(sprite_height*pos);
            pos*= -1;
            }
        
        }
    else{
        //Si on a pas d'élu:
        repeat(5){
            if collision_rectangle(x-150,y-(sprite_height/2)-1,view_xview[0]+view_wview[0],y-(sprite_height/2)+1,object_category,false,true) = noone{
                y--;
                }
            else{
                if collision_rectangle(x-150,y-(sprite_height/2),view_xview[0]+view_wview[0],y+(sprite_height/2),object_category,false,true) != noone{
                    y++;
                    }
                }
            tmp=collision_rectangle(x-150,y+(sprite_height/2)-1,view_xview[0]+view_wview[0],y+(sprite_height/2),object_category,false,true);
            if tmp != noone{
                tmp.y++;
                }
            }
        }
    
    y=clamp(y,sprite_height/2,view_yview[0]+view_hview[0]-(sprite_height/2));
    }
    
if OBJECTIVE != ""{
    if abs(OBJECTIVE-y) &lt; 0.4{
        y=OBJECTIVE;
        OBJECTIVE="";
        }
    else{
        y+= (OBJECTIVE-y)/5;
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///On enlève l'id de l'élu et la corbeille.
if global.pressedID=id{
    global.pressedID="";    
    dir_y=0;
    depth=0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Définission de "pos"
if global.pressedID!=id{
    if global.pressedID.y&lt;y{
        pos=1; //L'élu est au dessus du bloc;
        }
    else{
        pos= -1; //L'élu est en dessous du bloc;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Placement de l'élu
if global.pressedID=id{
    y=mouse_y-dir_y;
    if abs((view_xview[0]+(view_wview[0]/2)-210)-x) &lt; 0.4{
        x=(view_xview[0]+(view_wview[0]/2)-210);
        }
    else{
        x+=((view_xview[0]+(view_wview[0]/2)-210)-x)/8;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.pressedID=id;
dir_y=mouse_y-y;
depth=10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Je dois dessiner uniquement ce qui dépasse, cela pose un peu problème pour l'apparition du texte:
//Le sprite:
draw_self();
draw_sprite_part(sprite_reverse_tag,0,0,0,(view_xview[0]+(view_wview[0]/2))-bbox_left,sprite_height,x-(sprite_width/2),y-(sprite_height/2));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
