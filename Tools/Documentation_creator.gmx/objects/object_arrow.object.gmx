<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Je parse et écris dans le fichier html (compressé faut pas déconner c'est vachement plus pratique quand même)
//Placement initial
x= room_width-(object_button.sprite_width/2);
y=object_button.sprite_height/2;
//Go faire des collisions:

while(collision_point(x,y,object_part,false,true) != noone){
    This_part=collision_point(x,y,object_part,false,true);
    switch(This_part.ID){
        
        case 1: //Écrire un titre:
            file_text_write_string(global.html,'&lt;p class="BigTitlePurple"&gt;'+This_part.Final+'&lt;/p&gt;');
            break;
        
        case 2: //Écrire un sous titre violet:
            file_text_write_string(global.html,'&lt;p class="SubTitlePurple"&gt;'+This_part.Final+'&lt;/p&gt;');
            break;
        
        case 3: //Écrire un sous titre :
            file_text_write_string(global.html,'&lt;p class="SubTitleDark"&gt;'+This_part.Final+'&lt;/p&gt;');
            break;
            
        case 4: //Écrire un petit titre violet:
            file_text_write_string(global.html,'&lt;p class="LittleTitlePurple"&gt;'+This_part.Final+'&lt;/p&gt;');
            break;
    
        case 5: //Écrire un petit titre:
            file_text_write_string(global.html,'&lt;p class="LittleTitle"&gt;'+This_part.Final+'&lt;/p&gt;');
            break;
        
        case 6: //Écrire un texte syntaxé:
            file_text_write_string(global.html,'&lt;p class="Syntax"&gt;'+This_part.Final+'&lt;/p&gt;');
            break;
            
        case 7: //Écrire un tableau:
            //Écrire la tête du tableau
            file_text_write_string(global.html,'&lt;table class="FunctionTable"&gt;&lt;tr class="FunctionTableTitle"&gt;&lt;td&gt;Arguments&lt;/td&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Description&lt;/td&gt;&lt;/tr&gt;');
            for(i=1;i&lt;=array_height_2d(This_part.Final);i++){
                if floor(i/2)*2 = i{
                    //Chiffre pair, penser à changer la couleur du fond de ces lignes:
                    file_text_write_string(global.html,'&lt;tr class="FunctionTableLineBis"&gt;&lt;td&gt;'+This_part.Final[i-1,0]+'&lt;/td&gt;&lt;td&gt;'+This_part.Final[i-1,1]+'&lt;/td&gt;&lt;td&gt;'+This_part.Final[i-1,2]+'&lt;/td&gt;&lt;/tr&gt;');
                    }
                else{
                    //Chiffre impaire ligne de couleur normale:
                    file_text_write_string(global.html,'&lt;tr&gt;&lt;td&gt;'+This_part.Final[i-1,0]+'&lt;/td&gt;&lt;td&gt;'+This_part.Final[i-1,1]+'&lt;/td&gt;&lt;td&gt;'+This_part.Final[i-1,2]+'&lt;/td&gt;&lt;/tr&gt;');
                    }
                }
            //Fini le tableau:
            file_text_write_string(global.html,"&lt;/table&gt;");
            break;
            
        case 8: //Nouveau système d'images. Bien plus user friendly ainsi que compatible avec les changement de positions.
            //Les .jpg/jpeg,.png,.gif sont maintenant accepté.
            if file_exists(working_directory+"Docs/images/tmp/"+This_part.Final){
                file_copy(working_directory+"Docs/images/tmp/"+This_part.Final,working_directory+"Docs/images/"+global.SiteCat+global.SiteTitle+"/"+This_part.Final);
                
                //Dès ce jour les images seront centrés
                if global.SiteCat!=""{
                    file_text_write_string(global.html,'&lt;img class="Center" src="../../images/'+global.SiteCat+global.SiteTitle+'/'+This_part.Final+'"/&gt;');
                    }
                else{
                    file_text_write_string(global.html,'&lt;img class="Center" src="../images/'+global.SiteTitle+'/'+This_part.Final+'"/&gt;');
                    }
                }
                
            break;
        
        case 9: //C'est du texte, ou un paragraphe plutôt:
            file_text_write_string(global.html,'&lt;p&gt;'+string_replace(This_part.Final,"#",'&lt;br&gt;')+'&lt;/p&gt;');
            break;
        
        }
    y+=object_button.sprite_height;
    }

//NORMALEMENT Il n'y a plus de parties à compiler: Fermons le fichier.
//Bas de page:
file_text_write_string(global.html,'&lt;table class="FooterTable"&gt;&lt;/body&gt;&lt;/html&gt;');

file_text_close(global.html);

//Maintenant il faudrait générer un index des pages existantes. On doit supprimer l'index précédent s'il existe.
if file_exists(working_directory+"Docs/index.html"){
    file_rename(working_directory+"Docs/index.html",working_directory+"Docs/index.txt");
    file_delete(working_directory+"Docs/index.txt");
    }
index=file_text_open_write(working_directory+"Docs/index.html");
//On écrit le haut de page: compressé.
file_text_write_string(index,'&lt;DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset="utf-8" /&gt;&lt;link rel="stylesheet" href="css/css.css" /&gt;&lt;title&gt;index-PPA Docs&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p class="BigTitlePurple"&gt;Index-PPA Docs&lt;/p&gt;&lt;p class="SubTitlePurple"&gt;This section shows every page available about this game.&lt;/p&gt;');

ini_open(working_directory+"Docs/settings/settings.ini")
//On écrit toutes les catégories sauf celle par défaut.
for(i=1;i&gt; -1;i++){
    if ini_key_exists("category",string(i)){
        FoundCat=ini_read_string("category",string(i),"");
        
        if file_find_first(working_directory+"Docs/html/"+FoundCat+"*.html",0) != ""{    
            //On écrit le titre de la catégorie ainsi que le reste.
            file_text_write_string(index,'&lt;ul&gt;&lt;li&gt;&lt;p class="Category" id="'+string_replace(FoundCat,"/","")+'"&gt;'+string_replace(FoundCat,"/",":")+'&lt;/p&gt;&lt;/li&gt;'); //Nom de la catégorie
            file_text_write_string(index,'&lt;ul&gt;&lt;li&gt;&lt;a href="html/'+FoundCat+file_find_first(working_directory+"Docs/html/"+FoundCat+"*.html",0)+'"&gt;'+string_replace(file_find_first(working_directory+"Docs/html/"+FoundCat+"*.html",0),".html","")+'&lt;/a&gt;&lt;/li&gt;'); //Ouverture du tableau et marquage du premier fichier
            
            for(j=1;j&gt; -1; j++){
                temp=file_find_next();
                if temp != ""{
                    file_text_write_string(index,'&lt;li&gt;&lt;a href="html/'+FoundCat+temp+'"&gt;'+string_replace(temp,".html","")+'&lt;/a&gt;&lt;/li&gt;')
                    }
                else{
                    j= -10;
                    }
                }
            file_text_write_string(index,'&lt;/ul&gt;&lt;/ul&gt;&lt;br&gt;'); //Fin de tableau + saut de ligne;
            }   
        }
    else{
        i= -10;
        }
    }

//Maintenant on écrit la catégorie par défaut:
if file_find_first(working_directory+"Docs/html/*.html",0) != ""{
    file_text_write_string(index,'&lt;p class="Category" id="Others"&gt;Others:&lt;/p&gt;')
    file_text_write_string(index,'&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="html/'+file_find_first(working_directory+"Docs/html/*.html",0)+'"&gt;'+string_replace(file_find_first(working_directory+"Docs/html/*.html",0),".html","")+'&lt;/a&gt;&lt;/li&gt;');
    for(i=1;i&gt;-1;i++){
        temp=file_find_next();
        if temp != ""{
            file_text_write_string(index,'&lt;li&gt;&lt;a href="html/'+temp+'"&gt;'+string_replace(temp,".html","")+'&lt;/a&gt;&lt;/li&gt;');
            }
        else{
            i= -40;
            }
        }
    file_text_write_string(index,'&lt;/ul&gt;&lt;/ul&gt;&lt;br&gt;');
    }

//Fin de l'index:
file_text_write_string(index,'&lt;/body&gt;&lt;/html&gt;');
file_text_close(index);

//Maintenant nous devons récupérer toutes les pages de CHAQUE catégorie afin de générer un pied de page.

for(i=0;i&gt; -1;i++){//Pour chaque catégorie:
    FoundCat=ini_read_string("category",string(i),"///");
    if FoundCat != "///"{//Si cette catégorie existe
        instance_create(0,0,object_container); //On crée notre container qui doit... contenir toutes les variables.
        
        if file_find_first(working_directory+"Docs/html/"+FoundCat+"*.html",0) != ""{// Si il y a au moins un fichier dans cette catégorie.
            object_container.Pages[0]=file_find_first(working_directory+"Docs/html/"+FoundCat+"*.html",0); //On récupère son nom.
            for(j=1;j&gt; -1;j++){//Si il y a d'autres fichiers dans cette catégorie   
                temp=file_find_next();
                if temp != ""{
                    object_container.Pages[j]=temp; //On stocke leur nom dans le container.
                    }
                else{//Plus de fichiers, on arrête la collecte.
                    j= -10;
                    }
                }
            }
            
        //Maintenant que nous avons collecté des pages pour UNE catégorie, il faut encore pouvoir éditer les footers.
        if variable_instance_exists(object_container,"Pages"){ //Si le container possède des noms de fichiers.
            for(k=0;k&lt;array_length_1d(object_container.Pages);k++){//On parcours le tableau.
                //Acquerir le string:
                file=file_text_open_read(working_directory+"Docs/html/"+FoundCat+object_container.Pages[k]);
                str=file_text_read_string(file);
                file_text_close(file);
                
                //Effacer le reste:
                start=string_pos('&lt;table class="FooterTable"&gt;',str);//Je considère que ce morceau sera toujours mis même lors de la creation de la première page
                stop=string_pos('&lt;/html&gt;',str)+string_length('&lt;/html&gt;'); //Je considère que la page sera toujours correctement fermé sinan c'est la merde.
                str=string_delete(str,start,stop-start);
                
                //Ajouter la table:
                if (k= 0) &amp;&amp; (k= array_length_1d(object_container.Pages)-1){//Si la page et la première et la dernière.
                    //On est le premier et le dernier de la catégorie:
                    //On ajoute juste le centre.
                    str+='&lt;table class="FooterTable"&gt;&lt;tr&gt;&lt;th&gt;';
                    if FoundCat=""{
                        str+='&lt;a href="../index.html#Others"&gt;&lt;p class="FooterCenter"&gt;Back to the Index&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;&lt;/tr&gt;';
                        }
                    else{
                        str+='&lt;a href="../../index.html#'+string_replace(FoundCat,"/","")+'"&gt;&lt;p class="FooterCenter"&gt;Back to the Index&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;&lt;/tr&gt;';
                        }
                    }
                else{
                    if k=0{//Si l'on est sur la première page.
                        //On ajoute le centre+ la page suivante.
                        str+='&lt;table class="FooterTable"&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;';
                        if FoundCat=""{
                            str+='&lt;a href="../index.html#Others"&gt;&lt;p class="FooterCenter"&gt;Back to the Index&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;';
                            }
                        else{
                            str+='&lt;a href="../../index.html#'+string_replace(FoundCat,"/","")+'"&gt;&lt;p class="FooterCenter"&gt;Back to the Index&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;';
                            }
                        str+='&lt;th&gt;&lt;a href="'+object_container.Pages[1]+'"&gt;&lt;p class="FooterRight"&gt;&lt;span class="white"&gt;Next: &lt;/span&gt;'+string_replace(object_container.Pages[1],'.html','')+'&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;&lt;/tr&gt;';
                            
                        }
                    else{
                        if k= array_length_1d(object_container.Pages)-1{//Si l'on est le dernier fichier:
                            //Le fichier précédent plus le retour à l'index:
                            str+='&lt;table class="FooterTable"&gt;&lt;tr&gt;&lt;th&gt;&lt;a href="'+object_container.Pages[k-1]+'"&gt;&lt;p class="FooterLeft"&gt;&lt;span class="white"&gt;Back: &lt;/span&gt;'+string_replace(object_container.Pages[k-1],'.html','')+'&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;';
                            if FoundCat=""{
                                str+='&lt;th&gt;&lt;a href="../index.html#Others"&gt;&lt;p class="FooterCenter"&gt;Back to the Index&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;&lt;th&gt;&lt;/th&gt;&lt;/tr&gt;';
                                }
                            else{
                                str+='&lt;th&gt;&lt;a href="../../index.html#'+string_replace(FoundCat,"/","")+'"&gt;&lt;p class="FooterCenter"&gt;Back to the Index&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;&lt;th&gt;&lt;/th&gt;&lt;/tr&gt;';
                                }
                            
                            }
                        else{
                            //On est un fichier parmis d'autres, tous les boutons sont disponibles.
                            str+='&lt;table class="FooterTable"&gt;&lt;tr&gt;&lt;th&gt;&lt;a href="'+object_container.Pages[k-1]+'"&gt;&lt;p class="FooterLeft"&gt;&lt;span class="white"&gt;Back: &lt;/span&gt;'+string_replace(object_container.Pages[k-1],'.html','')+'&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;';
                            if FoundCat=""{
                                str+='&lt;th&gt;&lt;a href="../index.html#Others"&gt;&lt;p class="FooterCenter"&gt;Back to the Index&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;';
                                }
                            else{
                                str+='&lt;th&gt;&lt;a href="../../index.html#'+string_replace(FoundCat,"/","")+'"&gt;&lt;p class="FooterCenter"&gt;Back to the Index&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;';
                                }
                            str+='&lt;th&gt;&lt;a href="'+object_container.Pages[k+1]+'"&gt;&lt;p class="FooterRight"&gt;&lt;span class="white"&gt;Next: &lt;/span&gt;'+string_replace(object_container.Pages[k+1],'.html','')+'&lt;/p&gt;&lt;/a&gt;&lt;/th&gt;&lt;/tr&gt;';
                            }
                        
                        }
                    }
                    
                //Oki donc là il nous reste plus qu'a fermer et appliquer.
                str+='&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;';
                //Supprimer l'ancien fichier
                file_rename(working_directory+"Docs/html/"+FoundCat+object_container.Pages[k],working_directory+"Docs/html/"+FoundCat+string_replace(object_container.Pages[k],'.html','.txt'));
                file_delete(working_directory+"Docs/html/"+FoundCat+string_replace(object_container.Pages[k],".html",".txt"));
                file=file_text_open_write(working_directory+"Docs/html/"+FoundCat+object_container.Pages[k]);
                file_text_write_string(file,str);
                file_text_close(file);
                
            
                }
            }
        }
    else{//Plus de categorie existante, donc on arrête la collecte:
        i= -10;
        }
    instance_destroy(object_container);
    }






instance_destroy();
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message("La page à été exporté et l'index actualisé !");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
