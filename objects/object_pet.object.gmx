<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_fox_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Définition des variables:
idle_sprite = sprite_fox_idle;
run_sprite = sprite_fox_run;
dead_sprite = sprite_fox_dead;
sprite_index = idle_sprite;
image_speed = 0;

hsp = 0;
vsp = 0;

//Initialize AI
alarm[0] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arbre de l'IA:
DistanceFromPlayer = distance_to_object(object_player);
DirectionOppositeFromPlayer = sign(x-object_player.x);
DirectionToPlayer = DirectionOppositeFromPlayer*(-1);

//Default hsp:
if abs(hsp) &gt;0{
    hsp = choose(hsp,0);
    }
else{
    hsp = choose(0,2,-2);
    }

if DistanceFromPlayer &lt;= 35{
    if object_player.goodness &lt; 30{
        //Scared
        hsp = 3*DirectionOppositeFromPlayer;
        }
    else{
        if object_player.goodness &gt; 70{
            //Curious
            hsp = 1*DirectionToPlayer; 
            }
        }
    }

if hsp != 0{
    image_xscale = sign(hsp);
    }

    
    
alarm[0]=60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///-----COLLISIONS+SAUT-----


//Saut
if hsp != 0{
    if place_meeting(x,y+1,object_wall){
        if !position_meeting(x+(sprite_width/2)+hsp,bbox_bottom+1,object_wall){
            if (collision_rectangle(x-(sprite_width/2),bbox_top-PET_MAX_JUMP,x+(sprite_height/2)+(PET_MAX_DIST*image_xscale),bbox_bottom,object_wall,false,true) = noone) &amp;&amp; place_meeting(x+(PET_MAX_DIST*image_xscale),y+1,object_wall){
                //Jump
                vsp = (-4);  
                }
            else{
                if !position_meeting(x+(sprite_width/2)+hsp,bbox_bottom+PET_MAX_JUMP,object_wall){
                    hsp = 0;
                    }
                }
            }
        else{
            if place_meeting(x+(PET_MAX_DIST/2)*image_xscale,y,object_wall){
                if !place_meeting(x+(PET_MAX_DIST/2)*image_xscale,y-PET_MAX_JUMP,object_wall){
                    //Jump
                    vsp = (-4);
                    }
                }
            }  
        }
    }

//Collisions
// Verticale
repeat(floor(abs(vsp))) {
    if (!place_meeting(x, y + sign(vsp), object_wall))
        y += sign(vsp); 
    else {
        vsp = 0;
        break;
        }
    }
// Horizontal
repeat(floor(abs(hsp))) {
    if (!place_meeting(x + sign(hsp), y, object_wall))
        x += sign(hsp); 
    else {
        hsp = 0;                                        
        break;
        }
    }

//Gravité
vsp += sign(9-vsp)*0.4;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///-----ANIMATIONS-----
switch(hsp){
    case 0:
        sprite_index=idle_sprite;
        image_speed=0;
        break;
        
    default:
        sprite_index=run_sprite;
        image_speed=0.12;    
    
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Débug
draw_self();
draw_point_colour(x+((sprite_width/2))+hsp,bbox_bottom+1,c_red);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
