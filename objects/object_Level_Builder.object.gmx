<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_level_builder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Level Builder V4</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialisation de l'environnement:
//Var réutilisées: global.SELECTED_SAVE,global.selected_level,global.selected_part.
print_debug("[LB] ----------INITIALISATION DE L'ENVIRONNEMENT----------");

//Ouverture du fichier de niveau correspondant:
ini_open(global.selected_level);

//Phase d'initialisation de l'environnement:
room_width = ini_read_real(global.selected_part,"XSize",424);
room_height = ini_read_real(global.selected_part,"YSize",240);

//Récupération des paramètres de monde.
original=ini_read_string(global.selected_part,"Worldsettings","(0.3,6,8,0.12,6000,0)");
check_integrity(id,"original",6);

//Déclaration des variables utilisés:
global.grav="";
global.jumpspeed="";
global.movespeed="";
global.frict="";
global.time_left="";
global.bossfight="";

if integrity{
    //Récupération des valeurs:
    grav=extract_real(id,"original");
    jumpspeed=extract_real(id,"original");
    movespeed=extract_real(id,"original");
    frict=extract_real(id,"original");
    time_left=extract_real(id,"original");
    bossfight=extract_real(id,"original");
    
    if integrity{
        //Affectation des valeurs
        global.grav=grav;
        global.jumpspeed=jumpspeed;
        global.movespeed=movespeed;
        global.frict=frict;
        global.time_left=time_left;
        global.bossfight=bossfight;
        }
    else{
        print_error("[LB] Arguments are wrong")
        print_debug("[LB] Skipping World settings");
        }
    }
else{
    print_debug("[LB] Skipping World settings definition");
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
