<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_temp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>object_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0;
hsp = 0;
pushspeed=0;
image_speed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Increment vsp
vsp += global.grav;

//Friction:
if hsp != 0{
    hsp = max(0,abs(hsp)-(global.frict/4))*sign(hsp);
    }

// Vertical collision
repeat(abs(vsp)) {
    if (!place_meeting(x, y + sign(vsp), object_wall))
        y += sign(vsp); 
    else {
        vsp = 0;
        break;
    }
}

//horizontal unoptimized collision
if instance_exists(object_player){
    if object_player.STATUS ="pushing"{
        for(i=1;i&gt;=-1;i-=2){
            if place_meeting(x+i,y,object_player){
                repeat(abs(pushspeed)){
                    if !place_meeting(x+(sign(pushspeed)*object_player.image_xscale),y,object_wall){
                        x+=(sign(pushspeed)*object_player.image_xscale);
                        object_player.x+=(sign(pushspeed)*object_player.image_xscale);
                        }
                    else{
                        break;
                        }
                    }
                }
            }
        }
    
            
    if place_meeting(x,y,object_hit){
        hsp=(pushspeed+sign(pushspeed))*sign(x-object_player.x);
        }
    
    // Horizontal collision.
    repeat(abs(hsp)) {
        if (!place_meeting(x + sign(hsp), y, object_wall))
            x += sign(hsp); 
        else {
            hsp = 0;
            break;
            }
        }
        
        
    }

    
  
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_text(x,y,string(hsp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
