<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_oldy_ghost</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize variables:
//var hitbox; 
//Initialise alarm:
alarm_set(0,1800);

if x &gt; object_player.x
    {
    image_xscale = -1;
    }
else
    {
    image_xscale = 1;
    }

//set the hit box
hitbox = instance_create(x,y,object_hit);
hitbox.image_xscale = sign(hitbox.sprite_width * image_xscale);
//hitbox.image_xscale = -1;
hitbox.image_yscale = sprite_height;
image_speed = 0.1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Nooooo, the light !
///Destroy the ghost.
instance_destroy();
instance_destroy(hitbox);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += 2*image_xscale;
hitbox.x = x;
if y+(sprite_height/2) != object_player.y
    {
    if y+(sprite_height/2) &lt; object_player.y
        {
        if point_distance(x,y+(sprite_height/2),x,object_player.y) &gt;= 1
            {
            y += clamp((1*point_distance(x,y,x,object_player.y))/20,0,1);
            }
        else
            {
            y += point_distance(x,y+(sprite_height/2),x,object_player.y);
            }
        }
    else
        {
        if point_distance(x,y+(sprite_height/2),x,object_player.y) &gt;= 1
            {
            y -= clamp((1*point_distance(x,y,x,object_player.y))/20,0,1);
            }
        else
            {
            y -= point_distance(x,y+(sprite_height/2),x,object_player.y);
            }
        }
    }    
hitbox.y = y;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
