<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_level_select</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Can_navigate = true;
image_speed = 0;
image_index = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Can_navigate = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remise en place de l'objet si l'on est dans la vide.
lv_index = collision_point(x+(sprite_width/2),y+(sprite_height/2),object_lv,false,true);
if lv_index.image_index &gt; 5 {
    x = xprevious;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Controls:
if Can_navigate{
    if gamepad_axis_value(0,gp_axislh) &gt; 0.5{
        Can_navigate = false;
        alarm_set(0,15);
        if place_meeting(x+30,y,object_lv){
            xprevious = x;
            x += 28;
            }
        else{
            if x &lt; (room_width/2){
                xprevious = x;
                x = 290;
                }
            else{
                xprevious = x;
                x = 120;
                }
            }
        }
    if gamepad_axis_value(0,gp_axislh) &lt; -0.5{
        Can_navigate = false;
        alarm_set(0,15);
        if place_meeting(x-30,y,object_lv){
            xprevious = x;
            x -= 28;
            }
        else{
            if x &lt; (room_width/2){
                xprevious = x;
                x = 346;
                }
            else{
                xprevious = x;
                x = 176;
                }
            }
        }
    }    
if gamepad_button_check_pressed(0,gp_shoulderr){
    object_white_book.page += 2;
    visible = true;
    instance_destroy(object_levelpaper);
    instance_destroy(object_levelboard);
    instance_destroy(object_lv);
    instance_create(51,19,object_levelpaper);
    instance_create(221,19,object_levelpaper);
    instance_create(121,136,object_levelboard);
    instance_create(291,136,object_levelboard);
    //Calcul position:
    x=120;
    if collision_point(x+(sprite_width/2),y+(sprite_height/2),object_lv,false,true).image_index = 6{
        x = 290;
        if collision_point(x+(sprite_width/2),y+(sprite_height/2),object_lv,false,true).image_index = 6{
            visible = false;
            }
        }    
                    
    }
if gamepad_button_check_pressed(0,gp_shoulderl){
    object_white_book.page -= 2;
    instance_destroy(object_levelpaper);
    instance_destroy(object_levelboard);
    instance_destroy(object_lv);
    instance_create(51,19,object_levelpaper);
    instance_create(221,19,object_levelpaper);
    instance_create(121,136,object_levelboard);
    instance_create(291,136,object_levelboard);
    x=120;
    if collision_point(x+(sprite_width/2),y+(sprite_height/2),object_lv,false,true).image_index = 6{
        x = 290;
        if collision_point(x+(sprite_width/2),y+(sprite_height/2),object_lv,false,true).image_index = 6{
            visible = false;
            }
        } 
    }
    
//Image index:
img_index = collision_point(x+(sprite_width/2),y+(sprite_height/2),object_lv,false,true);
if img_index != noone{
    if round(img_index.image_index) = 5{
        image_index = 0;
        }
    else{
        image_index = 1;
        }
    }
            
if gamepad_button_check_pressed(0,gp_face1){
    var PartToLoad = collision_point(x+(sprite_width/2),y+(sprite_height/2),object_lv,false,true).image_index;
    var MyPaper = collision_point(x,y-50,object_levelpaper,false,false);
    if MyPaper.Level[PartToLoad,5] = 1{
        global.selected_level = working_directory +"levels\Level "+string(MyPaper.ID);
        if PartToLoad = 0{
            global.selected_part = "PartOne";
            }
        else{
            if PartToLoad = 1{
                global.selected_part = "PartTwo";
                }
            else{
                if PartToLoad = 2{
                    global.selected_part = "PartThree";
                    }
                else{
                    if PartToLoad = 3{
                        global.selected_part = "PartFour";
                        }
                    else{
                        if PartToLoad = 4{
                            global.selected_part = "PartFive";
                            }
                        else{
                            if PartToLoad = 5{
                                global.selected_part = "Boss";
                                }
                            }
                        }
                    }
                }
            }
        //Then go load the level:
        room_goto(room_level);
        }
    else{
        //Play a deny sound;
        show_error("Error, MyPaper.level[PartToLoad,5] ="+string(MyPaper.Level[PartToLoad,5]),true);
        }
    }
if gamepad_button_check_pressed(0,gp_face2){
    script_fade_status("SELECT_SAVE");
    object_white_book.page = 0;
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
