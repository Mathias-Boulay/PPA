<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_select_item</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-14</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ID = instance_number(object_select_item)-1;
if !place_meeting(x,y,object_item_1)
    {
    x = object_inventory.x -88;
    y = object_inventory.y -48;
    }
Can_navigate = false;
alarm_set(0,13);
infos = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Can_navigate = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if abs(gamepad_axis_value(ID,gp_axislh)) &gt; 0.4
    {
    if Can_navigate
        {
        if place_meeting(x+(sign(gamepad_axis_value(ID,gp_axislh))*38),y,object_item_1)
            {
            x += sign(gamepad_axis_value(ID,gp_axislh))*38;
            Can_navigate = false;
            alarm_set(0,13);
            }
        else
            {
            if (object_inventory.y - y) &gt; 20
                {
                instance_create(object_inventory.x+53,object_inventory.y-47,object_select_info);
                }
            else
                {
                instance_create(object_inventory.x+53,object_inventory.y-19,object_select_info);
                }
                instance_destroy();
            }
        }
    }
    
if abs(gamepad_axis_value(ID,gp_axislv)) &gt; 0.4
    {
    if Can_navigate
        {
        if place_meeting(x,y+(sign(gamepad_axis_value(ID,gp_axislv))*38),object_item_1)
            {
            y += sign(gamepad_axis_value(ID,gp_axislv))*38;
            Can_navigate = false;
            alarm_set(0,13);
            }
        }
    }

if gamepad_button_check_pressed(ID,gp_face1)
    {
    infos += 1;
    if infos &gt; 1
        {
        infos = 0;
        }
    }
else
    {
    if gamepad_button_check_pressed(ID,gp_face2)
        {
        if infos = 1
            {
            infos = 0;
            }
        }
    else
        {
        if gamepad_button_check_pressed(ID,gp_face4) &amp;&amp; object_hud.active_item = 0
            {
            if place_meeting(x,y,object_item_7)
                {
                object_hud.numberofitems[7] -= 1;
                object_hud.active_item = 7;
                }
            else
                {
                if place_meeting(x,y,object_item_6)
                    {
                    object_hud.numberofitems[6] -= 1;
                    object_hud.active_item = 6;
                    }
                else
                    {
                    if place_meeting(x,y,object_item_5)
                        {
                        object_hud.numberofitems[5] -= 1;
                        object_hud.active_item = 5;
                        }
                    else
                        {
                        if place_meeting(x,y,object_item_4)
                            {
                            object_hud.numberofitems[4] -= 1;
                            object_hud.active_item = 4;
                            }
                        else
                            {
                            if place_meeting(x,y,object_item_3)
                                {
                                object_hud.numberofitems[3] -= 1;
                                object_hud.active_item = 3;
                                }
                            else
                                {
                                if place_meeting(x,y,object_item_2)
                                    {
                                    object_hud.numberofitems[2] -= 1;
                                    object_hud.active_item = 2;
                                    }
                                else
                                    {
                                    if place_meeting(x,y,object_item_1)
                                        {
                                        object_hud.numberofitems[1] -= 1;
                                        object_hud.active_item = 1;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            instance_destroy(object_item_1);
            if object_hud.active_item != 0
                {
                instance_create(object_inventory.x-67,object_inventory.y-27,asset_get_index("object_item_" +string(object_hud.active_item)));
                }
            
            
            
            var temp;
            temp = 1;
            repeat(array_length_1d(object_hud.numberofitems)-1)
                {
                repeat(object_hud.numberofitems[temp])
                    {
                    instance_create(object_inventory.x-67,object_inventory.y-27,asset_get_index("object_item_" +string(temp)));
                    }
                    temp += 1;
                }
            }  
        }
    }

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_select_item,1,x,y);
if infos = 1
    {
    if place_meeting(x,y,object_item_7)
        {
        draw_sprite(sprite_infos,1,object_inventory.x,object_inventory.y+76);
        }
    else
        {
        if place_meeting(x,y,object_item_6)
            {
            draw_sprite(sprite_infos,1,object_inventory.x,object_inventory.y+76);
            }
        else
            {
            if place_meeting(x,y,object_item_5)
                {
                draw_sprite(sprite_infos,1,object_inventory.x,object_inventory.y+76);
                }
            else
                {
                if place_meeting(x,y,object_item_4)
                    {
                    draw_sprite(sprite_infos,1,object_inventory.x,object_inventory.y+76);
                    }
                else
                    {
                    if place_meeting(x,y,object_item_3)
                        {
                        draw_sprite(sprite_infos,1,object_inventory.x,object_inventory.y+76);
                        }
                    else
                        {
                        if place_meeting(x,y,object_item_2)
                            {
                            draw_sprite(sprite_infos,1,object_inventory.x,object_inventory.y+76);
                            }
                        else
                            {
                            if place_meeting(x,y,object_item_1)
                                {
                                draw_sprite(sprite_infos,1,object_inventory.x,object_inventory.y+76);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
