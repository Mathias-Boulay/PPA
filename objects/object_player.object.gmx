<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprite_pushing</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Définition des variables locales:
hsp=0;
hsp_carry=0;
vsp=0;
walljumppower=0;
uncontrol=1;
looking=0;
jumpcount=0;
triplejumptampon=0;
divejumpcount=0;
attackcount=0;
invincible=false;
waiting=0;
yplus=10;
hurt=0;
accelerate=0;
Can_jump=true;
places_left=6;
STATUS="idle";
debug=0;
next_left=0;
next_right=0;
ID=(instance_number(object_player)-1);
temp_jump = false;


ini_close();
ini_open(global.SELECTED_SAVE);
goodness = ini_read_real("Data",string(ID+1)+"-goodness",50);
rionys = ini_read_real("Data",string(ID+1)+"-rionys",0);
image_speed = 0.1;


life=ini_read_real("Data",string(ID+1)+"-life",1);
heart_1=instance_create(view_xview[0]+7,view_yview[0]+47,object_heart);
heart_2 = instance_create(view_xview[0]+20,view_yview[0]+47,object_heart);
heart_3 = instance_create(view_xview[0]+33,view_yview[0]+47,object_heart);
heart_1.state = ini_read_string("Data",string(ID+1)+"-heart_1","basic");
heart_2.state = ini_read_string("Data",string(ID+1)+"-heart_2","basic");
heart_1.state = ini_read_string("Data",string(ID+1)+"-heart_2","basic");


//Adding hud
instance_create(x,y,object_hud);
instance_create(x,y,object_camera);



ini_close();
ini_open(global.selected_level);
    
//Debug:
instance_create(x,y,object_debug);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shai peut re-sauter !
Can_jump = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset attackcount:
attackcount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Effectuer un saut tout à fait classique:
vsp = -global.jumpspeed;
jumpcount ++;
Can_jump = false;
alarm_set(11,15);

/*if hsp &gt;= 3.5{
    if place_meeting(x,y+1,object_wall){
        triplejumptampon++;
        }
    }*/    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shai's moves V4 (accuracy first)
//Vérifie si le jeu est en pause ou si je consulte un vendeur:
if !instance_exists(object_pause){
    if STATUS = "lookup" &amp;&amp; place_meeting(x,y,object_seller){
        if gamepad_button_check_pressed(ID,gp_face2){
            STATUS="idle";
            }
        }
    else{
    
        //Réinitialiser le jumpcount si necessaire:
        if place_meeting(x,y+1,object_wall) &amp;&amp; Can_jump{
            jumpcount = 0;
            }
        
    
        //Réinitialiser le compteur d'attaque:
        if place_meeting(x,y+1,object_wall){attackcount = 0;}
        
        //Gérer le uncontroll:
        if place_meeting(x,y+1,object_uncontrol_platform){
            uncontrol = -1;
            }
        else{
            if uncontrol != 0{
                if alarm_get(9) = -1{
                    alarm_set(9,60);
                    }
                }
            }
        
        
            
        //Débug:
        next_right = place_meeting(x+2,y,object_wall);
        next_left = place_meeting(x-2,y,object_wall);
    
        //On prend les instructions du joueur:
        key_jump = gamepad_button_check_pressed(ID,gp_face1);
        key_jump_held = gamepad_button_check(ID,gp_face1);
        move = gamepad_axis_value(ID,gp_axislh)*uncontrol;
        looking = gamepad_axis_value(ID,gp_axislv); 
        attack = gamepad_button_check_pressed(ID,gp_face2);
        pause = gamepad_button_check_pressed(ID,gp_start) || os_is_paused();
        debugbutton = gamepad_button_check_pressed(ID,gp_stickr)
        
        //Mapper la croix directionelle:
        if gamepad_button_check(ID,gp_padl){move = -1;}
        if gamepad_button_check(ID,gp_padr){move = 1;}
        if gamepad_button_check(ID,gp_padu){looking = -1;}
        if gamepad_button_check(ID,gp_padd){looking = 1;}
        
        //Si demandé, on active la pause:
        if pause{
            if !instance_exists(object_left_button){
                instance_create(view_xview[ID]+(view_wview[ID]/2),view_yview[ID]+(view_hview[ID]/2),object_pause);
                }
            else{
                show_debug_message("Nombre d'instances actives: "+string(instance_number(object_pause)));
                }
            }
            
        //Appliquer une marge de detection car certaines manettes ne sont pas terriblements fonctionnelles:
        //Ou alors si le joueur effectue une action particulière.
        if abs(move) &lt; 0.1{
            move =0;
            }
        else{
            if !place_meeting(x,y+1,object_wall){
                if place_meeting(x+1,y,object_wall){
                    move = 0;
                    }
                else{
                    if place_meeting(x-1,y,object_wall){
                        move = 0;
                        }
                    }
                }
            else{
                if STATUS = "precrawl"{
                    move = 0;
                    }
                else{
                    if STATUS = "decrounching"{
                        move = 0;
                        }
                    else{
                        if STATUS = "headshot"{
                            move = 0;
                            }
                        else{
                            if STATUS = "divelanding"{
                                move = 0;
                                }
                            else{
                                if STATUS = "jumpfromdive"{
                                    move = 0;
                                    }
                                else{
                                    if STATUS = "rolling"{
                                        move = 0;
                                        }
                                    }
                                }
                            }
                        }
                    }
                } 
            } 
        
        //Définition du coefficient d'accélération:
        if (sign(hsp)=1 &amp;&amp; sign(move)= -1 ) || (sign(hsp) = -1 &amp;&amp; sign(move) = 1){
            accelerate = sign(move);
            }
        else{
            if STATUS = "crawling" || STATUS = "crawlidle"{
                if hsp &lt;= (move){
                    accelerate =1;
                    }
                else{
                    if hsp &gt; (move){
                        accelerate = -1;
                        }
                    }
                }
            else{
                if hsp &lt;= (move*3.99){
                    accelerate =1;
                    }
                else{
                    if hsp &gt; (move*3.99){
                        accelerate = -1;
                        }
                    }
                }
            }
        
        //Ajouter de la vitesse au joueur, change en fonction de son état:
        if abs(hsp)&lt;=3.99{
            if STATUS != "lookup"{
                if STATUS != "unlookup"{
                    if STATUS != "crawling" &amp;&amp; STATUS != "crawlidle"{
                        if STATUS !="divejumping"{
                            if place_meeting(x,y+1,object_wall){
                                if abs(move) != 0{
                                    if abs(hsp) &lt; 0.6{hsp = 0.6*sign(move);}
                                    if abs(hsp)+abs((global.movespeed/100)) &lt; abs(move*4){hsp += (global.movespeed/100)*accelerate;}
                                    }
                                }
                            else{
                                if abs(hsp) &lt; 0.6{hsp = 0.6*sign(move);}
                                if abs(hsp)+abs((global.movespeed/60)) &lt; abs(move*4) {hsp += (global.movespeed/60)*accelerate;}
                                }
                            }
                        else{
                            if !place_meeting(x,y+1,object_wall){
                                if abs(hsp) &lt; 0.6{hsp = 0.6*sign(move);}
                                if abs(hsp)+abs((global.movespeed/50)) &lt; abs(move*4){hsp += (global.movespeed/50)*accelerate;}
                                }
                            }
                        }
                    else{
                        if abs(move) != 0{
                            if abs(hsp) &lt; 0.6{hsp = 0.6*sign(move);}
                            if abs(hsp)+abs((global.movespeed/1000)) &lt; abs(move){hsp += (global.movespeed/1000)*accelerate;}
                        }
                    }
                }
            }
        }
    if STATUS = "crawling"{
        hsp = clamp(hsp, -1,1);
        }else{
            if STATUS = "divejumping"{
                if sign(hsp) != sign(image_xscale){
                    hsp = 0;
                    }
                }
            }
    /*if abs(hsp) &lt; 0.60 &amp;&amp; abs(move) != 0{
        hsp = 0.60*sign(hsp);
        }*/ 
        
        //Accelérer c'est bien beau mais faut freiner aussi, avec la friction ! :
        if STATUS != "rolling"{
            if sign(hsp) != sign(move){
                if abs(hsp) &lt; global.frict{
                    hsp = 0;
                    }
                else{
                    if hsp &gt; 0{
                        hsp -= global.frict;
                        }
                    else{
                        hsp += global.frict;
                        }
                    }
                }
            else{
                if STATUS = "divejumping"{
                    if place_meeting(x,y+1,object_wall){
                        if abs(hsp) &lt; global.frict{
                            hsp = 0;
                            }
                        else{
                            if hsp &gt; 0{
                                hsp -= global.frict*4;
                                }
                            else{
                                hsp += global.frict*4;
                                }
                            }
                        }
                    }
                }
            }
        else{
            if image_index &gt; 11{
                if abs(hsp) &lt; global.frict{
                    hsp = 0;
                    }
                else{
                    if hsp &gt; 0{
                        hsp -= global.frict;
                        }
                    else{
                        hsp += global.frict;
                        }
                    }
                }
            }
        //Ajout de friction si l'on possède de la propulsion depuis un mur:
        if abs(walljumppower) &lt; (global.frict/2){walljumppower = 0;}else{if walljumppower &gt; 0{walljumppower -= global.frict;}else{walljumppower += global.frict;}}
        //Pareil mais pour hsp carry
        if abs(hsp_carry) &lt; (global.frict/2){hsp_carry = 0;}else{if hsp_carry &gt; 0{hsp_carry -= global.frict/2;}else{hsp_carry += global.frict/2;}}
        
        //Et voici la gravité !
        //Vsp
        if vsp &lt; 9{vsp+=global.grav}
        //vsp_carry:
        //vsp_carry = max(0,vsp_carry
        
        
        //Réagir lorsque un obstacle vous inflige des dommages:
        if !invincible{
            if abs(hurt) != 0{
                image_speed = 0.4;
                hsp = hurt/1.5;
                vsp = -abs(hurt/3);
                hurt= 0 ;
                image_xscale = sign(hsp) * -1;
                STATUS = "hurt";
                }
            }   
        
        //Avec ce code, Shai pourra sauter !
        if key_jump{
            if STATUS != "rolling"{
                if STATUS != "precrawl"{
                    if STATUS != "hurt"{
                        if STATUS != "spinattack"{
                            if STATUS != "headshot"{
                                if STATUS != "divejumping"{
                                    //if STATUS != "lookup"{
                                        if STATUS = "crawling" || STATUS = "crawlidle"{
                                            if place_meeting(x,y+1,object_wall){
                                                //Jump while being crounched:
                                                STATUS = "jumpfromdive";
                                                alarm_set(0,10);
                                                image_speed = 0.5;
                                                image_index = 0;
                                                }
                                            }
                                        else{
                                            if !place_meeting(x,y+1,object_wall){ //Si vous n'êtes pas sur le sol
                                                if place_meeting(x-1,y,object_wall){
                                                    //Effectuer un saut depuis le mur de gauche, sans aucune latence;
                                                    vsp = -global.jumpspeed;
                                                    walljumppower = 4;
                                                    hsp = 0.5;
                                                    STATUS = "double_jumping";
                                                    }
                                                else{
                                                    if place_meeting(x+1,y,object_wall){
                                                        //Effectuer un saut depuis le mur de droite.
                                                        vsp = -global.jumpspeed;
                                                        walljumppower = -4;
                                                        hsp = -0.5;
                                                        STATUS = "double_jumping";
                                                        }
                                                    else{
                                                        if jumpcount &lt; 2{
                                                            if Can_jump{
                                                                //Effectuer un saut normal dans les airs, penser à l'incrémentation de la variable tampon de triple saut ?
                                                                vsp = -global.jumpspeed;
                                                                jumpcount ++;
                                                                Can_jump = false;
                                                                alarm_set(11,15);
                                                                STATUS = "double_jumping";
                                                                image_index = 0;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            else{ //Donc là vous êtes sur le sol:
                                                if jumpcount &lt; 2{
                                                    if Can_jump{
                                                        if STATUS = "divelanding"{
                                                            //On se relève en sautant mais va falloir remasteriser les contrôles:
                                                            STATUS = "jumpfromdive";
                                                            alarm_set(0,10);
                                                            image_speed = 0.5;
                                                            image_index = 0;
                                                            }
                                                        else{
                                                            //Effectuer un triple saut ou un saut normal. Le triple saut n'a pas d'implémentation prévue.
                                                            if triplejumptampon = 3{
                                                                //Effectuer un triple saut.
                                                                }
                                                            else{
                                                                //Effectuer un saut normal. Penser à l'incrémentation de la variable tampon de triple saut ?
                                                                alarm_set(0,4);
                                                                STATUS = "jumping";
                                                                image_speed = 0.4;
                                                                image_index = 0;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        //}
                                    }
                                }
                            }
                        else{
                            if jumpcount &lt; 2{
                                //Effectuer une propulsion pour la spin attack:
                                vsp = -global.jumpspeed;
                                jumpcount ++;
                                Can_jump = false;
                                alarm_set(11,15);
                                }
                            }
                        }
                    }
                }
        
            //Implémentation de la hauteur de saut variable:
            if STATUS != "rolling"{
                if STATUS != "jumpfromdive"{
                    if STATUS != "divejumping"{
                        if STATUS != "hurt"{
                            if vsp &lt; 0{
                                if !key_jump_held{
                                    vsp = max(vsp,-global.jumpspeed/2);
                                    }
                                }
                            }
                        }
                    }
                }
            }
            
        //Ok avec ça Shai devrait pouvoir attaquer(du moins sur la partie visuelle qui déclenchera la partie non-visuelle):
        if attack{
            if attackcount = 0{
                if !invincible{
                    attackcount++;
                    if STATUS != "rolling"{
                        if !(STATUS = "jumping" &amp;&amp; place_meeting(x,y+1,object_wall)){
                            if STATUS != "jumpfromdive"{
                                if STATUS != "divelanding"{
                                    if !place_meeting(x,y+1,object_wall){ //Si vous n'êtes pas sur le sol.
                                        if place_meeting(x-1,y,object_wall){
                                            //Effectuer une attaque dive depuis le mur de gauche:
                                            vsp = -global.jumpspeed;
                                            walljumppower = 4;
                                            x=x+2;
                                            STATUS = "divejumping";
                                            image_speed = 0.12;
                                            image_xscale = sign(walljumppower);
                                            }
                                        else{
                                            if place_meeting(x+1,y,object_wall){
                                                //Effectuer une attaque dive depuis le mur de droite
                                                vsp = -global.jumpspeed;
                                                walljumppower = -4;
                                                x = x-2;
                                                STATUS = "divejumping";
                                                image_speed = 0.12;
                                                image_xscale = sign(walljumppower);
                                                }
                                            else{
                                                if abs(move) &gt; 0.80 /*&amp;&amp; Can_jump*/{
                                                    //Effectuer un dive jump depuis les airs !
                                                    vsp = -global.jumpspeed/3;
                                                    if abs(move) != 0{image_xscale= sign(move);}
                                                    walljumppower = image_xscale*4;
                                                    STATUS = "divejumping";
                                                    image_speed = 0.12;
                                                    }
                                                else{
                                                    //Do the spin attack;
                                                    vsp = -global.jumpspeed/2;
                                                    walljumppower +=sign(image_xscale);
                                                    STATUS = "spinattack";
                                                    image_index = 0;
                                                    image_speed = 0.5
                                                    }
                                                }
                                            }
                                        }
                                    else{ //Donc si vous êtes sur le sol:
                                        if abs(move) &gt; 0.84 &amp;&amp; Can_jump{
                                            //Effectuer une roulade:
                                            STATUS = "rolling";
                                            hsp += 2*image_xscale;
                                            vsp = -1
                                            image_speed = 0.5;
                                            image_index = 0;
                                            }
                                        else{
                                            if STATUS != "headshot"{
                                                //Effectuer un headshot:
                                                STATUS= "headshot";
                                                waiting = 0;
                                                image_index = 0;
                                                image_speed = 0.4;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    else{
                        if image_index &gt;= 11{
                            if STATUS != "headshot"{
                                //Effectuer un headshot:
                                STATUS= "headshot";
                                waiting = 0;
                                image_index = 0;
                                image_speed = 0.4;
                                }
                            }
                        }
                    }
                }
            }
            
            
        //Ok maintenant vous devez éviter de passer entre les murs.
        //Surcouche plateforme verticale:
        if (!place_meeting(x,y+vsp_carry,object_wall)){
            if (!place_meeting(x,y+sign(vsp_carry),object_wall)){
                y += vsp_carry;
                }
            else{ //...
                vsp_carry=0;
                }
            }
        else{
            if (!place_meeting(x,y+sign(vsp_carry),object_wall)){
                y += sign(vsp_carry);
                }
            else{
                vsp_carry = 0;
                }
            }
        
        //Surcouche plateforme horizontale:
        if (!place_meeting(x+hsp_carry,y,object_wall)){
            if (!place_meeting(x+sign(hsp_carry),y,object_wall)){
                x += hsp_carry;
                }
            else{ //...
                hsp_carry=0;
                }
            }
        else{
            if (!place_meeting(x+sign(hsp_carry),y,object_wall)){
                x += sign(hsp_carry);
                }
            else{
                hsp_carry = 0;
                }
            }
            
        
        
        //Collision verticale: L'utilisation d'un statement "while" peut conduire à un crash.
        if (!place_meeting(x,y+(vsp),object_wall)){
            if (!place_meeting(x,y+sign(vsp),object_wall)){
                y += vsp;
                }
            else{
                vsp = 0;
                }
            }
        else{
            while (!place_meeting(x,y+sign(vsp),object_wall)){
                y += sign(vsp);
                }
            if place_meeting(x,y+sign(vsp),object_wall){
                vsp = 0;
                }
            }
            
        //Collision horizontale: Doit intégrer le support des pentes même si j'ai pas l'impression que cela va être utilisé.
        if (!place_meeting(x+(hsp+walljumppower),y,object_wall)){
            if (!place_meeting(x+sign(hsp+walljumppower),y,object_wall)){
                x += (hsp+walljumppower);
                }
            else{
                hsp = 0;
                walljumppower =0;
                }
            }
        else{
            if place_meeting(x,y+1,object_wall){
                yrealplus = 3;
                while(place_meeting(x+(hsp+walljumppower),y-yrealplus,object_wall) &amp;&amp; yrealplus &lt; 10){
                    yrealplus += 1;
                    }
                if (place_meeting(x+(hsp+walljumppower),y-yplus,object_wall)){
                    if (!place_meeting(x+sign(hsp+walljumppower),y-yplus,object_wall)){
                        x += sign(hsp+walljumppower);
                        }
                    else{
                        hsp = 0;
                        walljumppower = 0;
                        }
                    }
                else{
                    x += (hsp+walljumppower);
                    y -= yrealplus;
                    }
                }
            else{
                if (!place_meeting(x+sign(hsp+walljumppower),y,object_wall)){
                    x += sign(hsp+walljumppower);
                    }
                else{
                    hsp = 0;
                    walljumppower =0;
                    }
                }
            }
            
    //Correctif du système de collision en bois:
    if STATUS != "divejumping"{
        if place_meeting(x,y,object_wall){if next_right = true &amp;&amp; next_left != true{x -=2;}else{if next_right != true &amp;&amp; next_left = true{x +=2;}}}
        }
        
        
    
    //Gestion du sens de Shai, il ne faudrait pas qu'elle soit sens dessus dessous !
    if STATUS != "hurt"{
        if STATUS != "rolling"{
            if STATUS != "divefall"{
                if STATUS != "lookup"{
                    if STATUS != "divejumping"{
                        if STATUS != "divelanding"{
                            if STATUS != "jumpfromdive"{
                                if STATUS != "spinattack"{
                                    if STATUS != "headshot"{
                                        if STATUS != "landing"{
                                            if STATUS != "pre_landing"{
                                                if STATUS != "crawling"{
                                                    if STATUS != "crawlidle"{
                                                        if STATUS = "walljump"{
                                                            if place_meeting(x-1,y,object_wall){image_xscale = -1;}else{if place_meeting(x+1,y,object_wall){image_xscale = 1;}}
                                                            }
                                                        else{
                                                            if abs(hsp) &gt; 0.2{image_xscale = sign(hsp);}else{if hsp = 0 &amp;&amp; abs(move) != 0{image_xscale = sign(move);}}   
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
          
    //Gestion des STATUS de Shai:
    if !life &lt;= 0{ //Si Shai n'est pas re-morte
        if STATUS != "precrawl"{
            if STATUS != "stoppushing"{
                if STATUS != "rolling"{
                    if STATUS != "headshot"{
                        if STATUS != "hurt"{
                            if STATUS != "jumpfromdive"{
                                if STATUS != "divefall"{
                                    if STATUS != "jumpfromcrawl"{
                                        if STATUS != "divejumping"{
                                            if STATUS != "divelanding"{
                                                if STATUS != "spinup"{
                                                        if STATUS  != "spinattack"{
                                                            if STATUS != "jumping" &amp;&amp; STATUS != "double_jumping"{
                                                                if place_meeting(x,y+1,object_wall){ //Si Shai a un pied sur terre
                                                                    if hsp = 0{ //Si l'on est immobile 
                                                                        if looking &lt; -0.90{
                                                                           STATUS = "lookup";
                                                                            image_speed = 0.070;
                                                                            waiting = 0;
                                                                            }
                                                                        else{
                                                                            if STATUS = "lookup"{
                                                                                STATUS = "unlookup";
                                                                                image_speed = 0.05;
                                                                                }
                                                                            else{
                                                                                if looking &gt; 0.70{
                                                                                    if STATUS = "crawling"{
                                                                                        STATUS = "crawlidle";
                                                                                        image_speed = 0.2;
                                                                                        }
                                                                                    else{
                                                                                        if STATUS != "crawlidle" &amp;&amp; STATUS != "precrawl"{
                                                                                            STATUS = "precrawl";
                                                                                            image_speed = 0.5;
                                                                                            image_index = 0;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                else{
                                                                                    if STATUS = "crawling" || STATUS = "crawlidle"{
                                                                                        STATUS = "jumpfromcrawl";
                                                                                        image_index = 0;
                                                                                        image_speed=0.5;
                                                                                        }
                                                                                    else{
                                                                                        if abs(move) !=0{
                                                                                            if STATUS != "pushing" &amp;&amp; STATUS != "startpushing" &amp;&amp; STATUS != "stoppushing"{
                                                                                                STATUS = "startpushing";
                                                                                                image_index = 0;
                                                                                                image_speed = 0.5;
                                                                                                }
                                                                                            else{
                                                                                                if STATUS = "pushing"{
                                                                                                    image_speed = abs(move)/8;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        else{
                                                                                            if STATUS = "pushing"{
                                                                                                STATUS = "stoppushing";
                                                                                                image_index = 0;
                                                                                                image_speed = 0.5;
                                                                                                }
                                                                                            else{
                                                                                                if collision_line(x,y,x+(10*image_xscale),y+40,object_wall,false,true) = noone{
                                                                                                    STATUS = "ledge";
                                                                                                    image_speed = 0.15;
                                                                                                    }
                                                                                                else{
                                                                                                    if uncontrol = -1{
                                                                                                        STATUS = "rotating";
                                                                                                        image_speed = 0.22;
                                                                                                        }
                                                                                                    else{
                                                                                                        if waiting &gt; 5{
                                                                                                            //Faire des trucs en attendant comme.... des équations bicarrées ?
                                                                                                            /*if (waiting &gt; 5 &amp;&amp; waiting &lt; 5.1) || (waiting &gt; 10 &amp;&amp; waiting &lt; 10.1){
                                                                                                                STATUS = "waiting";
                                                                                                                }
                                                                                                            else{*/
                                                                                                                if (waiting &gt; 10 &amp;&amp; waiting &lt; 10.1){
                                                                                                                    STATUS = "waiting_phase_2";
                                                                                                                    image_speed = 0.25;
                                                                                                                    }
                                                                                                                else{
                                                                                                                    if waiting &gt; 18{
                                                                                                                        STATUS = "waiting_phase_3";
                                                                                                                        if image_index &lt; 1{
                                                                                                                            image_speed = 0.006;
                                                                                                                            }
                                                                                                                        else{
                                                                                                                            image_speed = 0.15;
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                //}
                                                                                                            }
                                                                                                        else{
                                                                                                            if global.bossfight{
                                                                                                                STATUS = "idle_bossfight";
                                                                                                                image_speed = 0.033;
                                                                                                                }
                                                                                                            else{
                                                                                                                STATUS = "idle";
                                                                                                                image_speed = 0.1; 
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    else{ //Si l'on est pas immobile...
                                                                        if looking &gt; 0.70{
                                                                            if STATUS = "crawling"{image_speed=(abs(hsp)/5)*sign(hsp)*sign(image_xscale);}
                                                                            if STATUS = "crawlidle"{
                                                                                STATUS = "crawling";
                                                                                }
                                                                            else{
                                                                                if STATUS != "crawling" &amp;&amp; STATUS != "precrawl"{
                                                                                    STATUS = "precrawl";
                                                                                    image_speed = 0.4;
                                                                                    image_index = 0;
                                                                                    }
                                                                                }
                                                                            }
                                                                        else{
                                                                            if STATUS = "crawling" || STATUS = "crawidle"{
                                                                                STATUS = "jumpfromcrawl";
                                                                                image_index = 0;
                                                                                image_speed=0.5;
                                                                                }
                                                                            else{
                                                                                if (sign(move) = 1 &amp;&amp; sign(hsp) = -1) || (sign(move) = -1 &amp;&amp; sign(hsp) = 1){
                                                                                    STATUS = "stopping";
                                                                                    }
                                                                                else{
                                                                                    if abs(hsp) &gt; 3.4{
                                                                                        STATUS = "running";
                                                                                        image_speed = abs(hsp)/16
                                                                                        }
                                                                                    else{
                                                                                        STATUS = "walking";
                                                                                        image_speed = abs(hsp)/32
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                else{ //Si Shai a les jambes en l'air
                                                                    if place_meeting(x-1,y,object_wall) || place_meeting(x+1,y,object_wall){
                                                                        STATUS = "walljump";
                                                                        }
                                                                    else{
                                                                        if vsp &gt; 1{
                                                                            STATUS = "landing";
                                                                            //Sous gestion des animations:
                                                                            if move*image_xscale &lt; 0{ //Stick à gauche
                                                                                if image_index &lt; 12{
                                                                                    image_index = 12;
                                                                                    image_speed = 0.5;
                                                                                    }
                                                                                }
                                                                            else{
                                                                                if move*image_xscale &gt; 0{ //Stick à droite
                                                                                    if image_index &lt; 6 || image_index &gt; 11{
                                                                                        image_index = 6;
                                                                                        image_speed = 0.5;
                                                                                        }
                                                                                    }
                                                                                else{ //Stick au milieu
                                                                                    if image_index &gt; 5{
                                                                                        image_index = 0;
                                                                                        image_speed = 0.5;
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        else{
                                                                            if abs(vsp) &lt;= 1{
                                                                                STATUS = "pre_landing";
                                                                                image_speed = 0.5;
                                                                                }
                                                                            }
                                                                        }  
                                                                    }
                                                                }
                                                            else{
                                                                if !place_meeting(x,y+1,object_wall){
                                                                    if place_meeting(x-1,y,object_wall) || place_meeting(x+1,y,object_wall){
                                                                        STATUS = "walljump";
                                                                        }
                                                                    else{
                                                                        if vsp &gt; 1{
                                                                                STATUS = "landing";
                                                                                //Sous gestion des animations:
                                                                                if move*image_xscale &lt; 0{ //Stick à gauche
                                                                                    if image_index &lt; 12{
                                                                                        image_index = 12;
                                                                                        image_speed = 0.5;
                                                                                        }
                                                                                    }
                                                                                else{
                                                                                    if move*image_xscale &gt; 0{ //Stick à droite
                                                                                        if image_index &lt; 6 || image_index &gt; 11{
                                                                                            image_index = 6;
                                                                                            image_speed = 0.5;
                                                                                            }
                                                                                        }
                                                                                    else{ //Stick au milieu
                                                                                        if image_index &gt; 5{
                                                                                            image_index = 0;
                                                                                            image_speed = 0.5;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            else{
                                                                                if abs(vsp) &lt;= 1{
                                                                                    STATUS = "pre_landing";
                                                                                    image_speed = 0.5;
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            else{
                                                                if place_meeting(x,y+1,object_wall){STATUS="idle";}
                                                                }
                                                            }
                                                        }
                                                    }
                                                else{
                                                    if place_meeting(x,y+1,object_wall){
                                                        STATUS = "divelanding";
                                                        }
                                                    else{
                                                        if place_meeting(x+image_xscale*2,y,object_wall){
                                                            hurt = (hsp*walljumppower);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        else{
                                            if place_meeting(x,y+1,object_wall){
                                                STATUS = "divelanding";
                                                }
                                            }
                                        }
                                    }
                                else{
                                    if place_meeting(x,y+1,object_wall){
                                        STATUS = "stopping";
                                        image_index = 2;
                                        }
                                    }
                                }
                            else{
                                //Section qui vise à replacer Shai en fonction de son image index dans l'attaque headshot.   
                                }
                            }
                        else{
                            //Gérer les étapes de la roulade:
                            if image_index &gt;= 3 &amp;&amp; image_index &lt;4{
                                //Vérifier si elle est au sol:
                                if !place_meeting(x,y+1,object_wall){
                                    image_index = 3;
                                    }
                                }
                            else{
                                if !place_meeting(x,y+1,object_wall){
                                    if image_index &gt;= 11{
                                        if key_jump{
                                            temp_jump = true;
                                            }
                                        }
                                    if vsp &gt; 1.5{
                                        STATUS = "pre_landing";
                                        image_index = 0;
                                        image_speed = 0.5;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                
                
        //Increment waiting time:
        if x = xprevious &amp;&amp; y = yprevious &amp;&amp; STATUS != "pushing" &amp;&amp; STATUS != "startpushing" &amp;&amp; STATUS != "stoppushing" &amp;&amp; STATUS != "crawlidle" &amp;&amp; STATUS !="precrawl" &amp;&amp; STATUS !="crawlidle" &amp;&amp; STATUS != "jumpfromcrawl" {waiting += 0.012;}else{waiting = 0;}
        
        
        //angle for dive jumping:
        if STATUS = "divejumping" &amp;&amp; vsp &gt; 0{
            if image_angle &lt; 45 &amp;&amp; image_xscale = -1{
                image_angle ++;
                }
            else{
                if image_angle &gt; -45 &amp;&amp; image_xscale = 1{
                    image_angle --;
                    }
                }
            if abs(image_angle) = 45{
                STATUS = "divefall";
                image_angle = 0;
                }
            }
        else{
            image_angle = 0;
            }
        }
    }
else{
    image_index -= image_speed;
    }
    
    
    //The one line animator:
    sprite_index = asset_get_index("sprite_"+STATUS);
    if sprite_index = -1{sprite_index = sprite_TPose;}
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase de débug et endroit tranquille pour des tests de code.
if keyboard_check_pressed(vk_down){
    instance_create(x,y-100,object_leaves);
    }








if gamepad_button_check_pressed(ID,gp_stickl){
    if debug &lt;1
        {
        debug ++;
        }
    else{
        debug = 0;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera for V4

//Follow xplayerposition
object_camera.x = ceil(x);

//rounding player vertical position
y = round(y);

//Suivre la position y de Shai
if sprite_index = sprite_lookup &amp;&amp; sprite_index &gt; 1
            {
            if instance_exists(object_fond_shop)
                {
                //object_camera.y = object_fond_shop.y-120;
                //Let's create a smooth scroll instead:
                if object_camera.y-object_player.y &lt; 59{
                    object_camera.y += min(3,(y+59)-object_camera.y);
                    }
                }
            else
                {
                if object_camera.y - y &gt; -50
                    {
                    if point_distance(object_camera.x,object_camera.y,object_camera.x,y-50) &gt;= 3
                        {
                        object_camera.y -= 3;
                        }
                    else
                        {
                        object_camera.y -= point_distance(object_camera.x,object_camera.y,object_camera.x,y-50);
                        }
                    }
                else
                    {
                    if point_distance(object_camera.x,object_camera.y,object_camera.x,y-50) &gt;= 3
                        {    
                        object_camera.y += 3;
                        }
                    else
                        {
                        object_camera.y += point_distance(object_camera.x,object_camera.y,object_camera.x,y-50);
                        }
                    }
                }
            }
        else
            {
            if sprite_index = sprite_unlookup
                {
                if object_camera.y - y &lt; 0
                    {
                    if point_distance(object_camera.x,object_camera.y,object_camera.x,y) &gt;= 3
                        {
                        object_camera.y += 3;
                        }
                    else
                        {
                        object_camera.y += point_distance(object_camera.x,object_camera.y,object_camera.x,y);
                        }
                    }
                }
            else
                {
                if point_distance(object_camera.x,object_camera.y,object_camera.x,y) &gt;= 10
                    {
                    object_camera.y += sign(y-object_camera.y)*11;
                    }
                else
                    {
                    object_camera.y += sign(y-object_camera.y)*point_distance(object_camera.x,object_camera.y,object_camera.x,y);
                    }
                }
            }


object_camera.y = round(object_camera.y);
//Traitement de la vue afin de la syncroniser plus vite:
view_xview[ID]= object_camera.x-212;
if view_xview[ID]+view_wview[ID]&gt; room_width{view_xview[ID]= room_width-view_wview[ID];}
if view_xview[ID]&lt; 0{view_xview[ID]= 0;}

view_yview[ID]=object_camera.y-120;
if view_yview[ID]+view_hview[ID]&gt; room_height{view_yview[ID]= room_height-view_hview[ID];}
if view_yview[ID]&lt; 0{view_yview[ID]= 0;}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parallax backgrounds V1.2
if is_array(global.backgrounds){
    if background_visible[0]{
        background_x[0] = (view_xview[0]/global.backgrounds[0,0])+global.backgrounds[0,7];
        background_y[0] = (view_yview[0]/global.backgrounds[0,1])+global.backgrounds[0,6];
        }
    if background_visible[1]{
        background_x[1] = (view_xview[0]/global.backgrounds[1,0])+global.backgrounds[1,7];
        background_y[1] = (view_yview[0]/global.backgrounds[1,1])+global.backgrounds[1,6];
        }
    if background_visible[2]{
        background_x[2] = (view_xview[0]/global.backgrounds[2,0])+global.backgrounds[2,7];
        background_y[2] = (view_yview[0]/global.backgrounds[2,1])+global.backgrounds[2,6];
        }
    if background_visible[3]{
        background_x[3] = (view_xview[0]/global.backgrounds[3,0])+global.backgrounds[3,7];
        background_y[3] = (view_yview[0]/global.backgrounds[3,1])+global.backgrounds[3,6];
        }
    if background_visible[4]{
        background_x[4] = (view_xview[0]/global.backgrounds[4,0])+global.backgrounds[4,7];
        background_y[4] = (view_yview[0]/global.backgrounds[4,1])+global.backgrounds[4,6];
        }
    if background_visible[5]{
        background_x[5] = (view_xview[0]/global.backgrounds[5,0])+global.backgrounds[5,7];
        background_y[5] = (view_yview[0]/global.backgrounds[5,1])+global.backgrounds[5,6];
        }
    if background_visible[6]{ 
        background_x[6] = (view_xview[0]/global.backgrounds[6,0])+global.backgrounds[6,7];
        background_y[6] = (view_yview[0]/global.backgrounds[6,1])+global.backgrounds[6,6];
        }
    if background_visible[7]{
        background_x[7] = (view_xview[0]/global.backgrounds[7,0])+global.backgrounds[7,7];
        background_y[7] = (view_yview[0]/global.backgrounds[7,1])+global.backgrounds[7,6];
        }  
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Compressed 'cause I have the PUTIN DE FLEMME !
if STATUS = "waiting" || STATUS = "unlookup"{
    STATUS = "idle";
    }
else{
    if STATUS = "divejumping"{
        image_index = 5;
        }
    else{
        if STATUS = "divelanding"{
            image_index = 6;
            image_speed = 0;
            }
        else{
            if STATUS = "waiting_phase_2"{
                image_index = 11;
                }
            else{
                if STATUS = "startpushing"{
                    STATUS = "pushing";
                    }
                else{
                    if STATUS = "precrawl"{
                        if looking &gt; 0.7{
                            STATUS = "crawlidle";
                            }
                        else{
                            STATUS = "jumpfromcrawl";
                            }
                        }
                    else{
                        if STATUS = "jumpfromdive"{
                            STATUS = "jumping";
                            image_index = 2;
                            image_speed = 0.5;
                            }
                        else{
                            if STATUS = "stoppushing"{
                                STATUS="idle";
                                }
                            else{
                                if STATUS = "pre_landing"{
                                    image_index = 1;
                                    image_speed = 0;
                                    }
                                else{
                                    if STATUS = "jumping"{
                                        image_index = 5;
                                        image_speed = 0;
                                        }
                                    else{
                                        if STATUS = "headshot"{
                                            STATUS = "idle";
                                            alarm_set(10,10);
                                            }
                                        else{
                                            if STATUS = "spinattack"{
                                                if !gamepad_button_check(ID,gp_face2){
                                                    ///The spin attack is over !
                                                    if (vsp &lt; -global.grav){
                                                        STATUS = "jumping";
                                                        }
                                                    else{
                                                         if (abs(vsp) &lt; 1){
                                                            STATUS = "pre_landing";
                                                            }
                                                        else{
                                                            if vsp &gt;= 1{
                                                                STATUS = "landing";
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            else{
                                                if STATUS = "jumpfromcrawl"{
                                                    STATUS = "idle";
                                                    }
                                                else{
                                                    if STATUS = "rolling"{
                                                        if temp_jump{
                                                            //Then do a jump;
                                                            STATUS = "jumping";
                                                            image_index = 2;
                                                            image_speed= 0.5;
                                                            vsp = -global.jumpspeed;
                                                            jumpcount ++;
                                                            Can_jump = false;
                                                            alarm_set(11,15);
                                                            }
                                                        else{
                                                            //Transition over running or walking;
                                                            if hsp &gt; 3.5{
                                                                STATUS = "running";
                                                                }
                                                            else{
                                                                if abs(hsp) &gt; 0{
                                                                    STATUS = "walking";
                                                                    }
                                                                else{
                                                                    STATUS = "idle";
                                                                    }
                                                                }
                                                            }
                                                        temp_jump = 0;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//show_debug_message("STATUS= "+string(STATUS));
//show_debug_message("sprite_index= "+string(sprite_index));

    
draw_sprite_ext(sprite_index,image_index,ceil(x),ceil(y),image_xscale,image_yscale,image_angle,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
