<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_level_drawer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Drawer from V-3.1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialisation de l'environnement:
show_debug_message("DRAWER ----------------------------------------------------------------------");
show_debug_message("INITIALISATION DE L'ENVIRONNEMENT--------------------------------------------");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase Backgrounds/Foregrounds:

show_debug_message("BACKGROUNDS LOADING PHASE--------------------------------------------");
Number = ini_read_real(global.selected_part,"BackgroundsNumber",0);

//Creation du tableau vide:
for(i=0;i&lt;=Number;i++){
    for(j=0;j&lt;=7;j++){
        global.backgrounds[i,j] = "";
        }
    }

for(i=1;i&lt;=Number;i++){
    original= ini_read_string(global.selected_part,string(i-1)+"-background","(0,0,sample,0)");
    original = string_replace(original,"(","");
    //Création du tableau des sprites vide:
    third_dimension = string_count("/",original);
    for(j=0;j&lt;third_dimension;j++){
        global.backgrounds_sprites[i-1,j] = "";
        }
    
    
    //Définition des variables
    for(j=1;j&gt;-1;j++){ //For xaxis:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,0] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,0]= "+global.backgrounds[i-1,0]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,0] = real(global.backgrounds[i-1,0]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For yaxis:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,1] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,1]= "+global.backgrounds[i-1,1]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,1] = real(global.backgrounds[i-1,1]);
            j = -10;
            }
        }
    
    var temp_asset = 0;
    for(j=1;j&gt;-1;j++){ //For Asset:
        if string_char_at(original,1) != "/"{
            global.backgrounds_sprites[i-1,temp_asset] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,"/","");
            global.backgrounds_sprites[i-1,temp_asset] = asset_get_index("background_"+global.backgrounds_sprites[i-1,temp_asset]);
            show_debug_message("global.backgrounds_sprites= "+string(global.backgrounds_sprites[i-1,temp_asset]));
            show_debug_message("original= "+original);
            temp_asset ++;
            if string_char_at(original,1) = ":"{
                //Do something to get the second info, the speed.
                original = string_replace(original,":","");
                for(k=1;k&gt;-1;k++){
                    if string_char_at(original,1) != ","{
                        global.backgrounds[i-1,2] += string_copy(original,1,1);
                        original = string_replace(original,string_char_at(original,1),"");
                        }
                    else{
                        //End of all
                        original = string_replace(original,",","");
                        show_debug_message("original= "+original);
                        show_debug_message("global.backgrounds[i-1,2]= "+global.backgrounds[i-1,2]);
                        global.backgrounds[i-1,2] = real(global.backgrounds[i-1,2]);
                        k=-10;
                        j=-10;
                        }
                    }
                }
            }
        }
    for(j=1;j&gt;-1;j++){ //For fore/back:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,3] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,3]= "+global.backgrounds[i-1,3]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,3] = real(global.backgrounds[i-1,3]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For htiled:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,4] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,4]= "+global.backgrounds[i-1,4]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,4] = real(global.backgrounds[i-1,4]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For vtiled:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,5] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,5]= "+global.backgrounds[i-1,5]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,5] = real(global.backgrounds[i-1,5]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For yfromtop:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,6] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,6]= "+global.backgrounds[i-1,6]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,6] = real(global.backgrounds[i-1,6]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For yfromtop:
        if string_char_at(original,1) != ")"{
            global.backgrounds[i-1,7] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,")","");
            show_debug_message("global.backgrounds[i-1,7]= "+global.backgrounds[i-1,7]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,7] = real(global.backgrounds[i-1,7]);
            j = -10;
            }
        }
    background_visible[i-1] = true;
    background_index[i-1] = global.backgrounds_sprites[i-1,0];
    actual_background[i-1]=0;
    alarm_set(i-1,global.backgrounds[i-1,2]);
    background_foreground[i-1] = global.backgrounds[i-1,3];
    background_htiled[i-1] = global.backgrounds[i-1,4];
    background_vtiled[i-1] = global.backgrounds[i-1,5];
           
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation pour le background 7:
actual_background[7] += 1;
if array_length_2d(global.backgrounds_sprites,7)-1 &lt; actual_background[7]{
    actual_background[7] = 0;
    }
background_index[7]=global.backgrounds_sprites[7,actual_background[7]];
alarm_set(7,global.backgrounds[7,2]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation pour le background 6:
actual_background[6] += 1;
if array_length_2d(global.backgrounds_sprites,6)-1 &lt; actual_background[6]{
    actual_background[6] = 0;
    }
background_index[6]=global.backgrounds_sprites[6,actual_background[6]];
alarm_set(6,global.backgrounds[6,2]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation pour le background 5:
actual_background[5] += 1;
if array_length_2d(global.backgrounds_sprites,5)-1 &lt; actual_background[5]{
    actual_background[5] = 0;
    }
background_index[5]=global.backgrounds_sprites[5,actual_background[5]];
alarm_set(5,global.backgrounds[5,2]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation pour le background 4:
actual_background[4] += 1;
if array_length_2d(global.backgrounds_sprites,4)-1 &lt; actual_background[4]{
    actual_background[4] = 0;
    }
background_index[4]=global.backgrounds_sprites[4,actual_background[4]];
alarm_set(4,global.backgrounds[4,2]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation pour le background 3:
actual_background[3] += 1;
if array_length_2d(global.backgrounds_sprites,3)-1 &lt; actual_background[3]{
    actual_background[3] = 0;
    }
background_index[3]=global.backgrounds_sprites[3,actual_background[3]];
alarm_set(3,global.backgrounds[3,2]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation pour le background 2:
actual_background[2] += 1;
if array_length_2d(global.backgrounds_sprites,2)-1 &lt; actual_background[2]{
    actual_background[2] = 0;
    }
background_index[2]=global.backgrounds_sprites[2,actual_background[2]];
alarm_set(2,global.backgrounds[2,2]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation pour le background 1:
actual_background[1] += 1;
if array_length_2d(global.backgrounds_sprites,1)-1 &lt; actual_background[1]{
    actual_background[1] = 0;
    }
background_index[1]=global.backgrounds_sprites[1,actual_background[1]];
alarm_set(1,global.backgrounds[1,2]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation pour le background 0:
actual_background[0] += 1;
if array_length_2d(global.backgrounds_sprites,0)-1 &lt; actual_background[0]{
    actual_background[0] = 0;
    }
background_index[0]=global.backgrounds_sprites[0,actual_background[0]];
alarm_set(0,global.backgrounds[0,2]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
