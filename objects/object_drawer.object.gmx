<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_level_drawer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Drawer from V-3.1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialisation de l'environnement:
show_debug_message("DRAWER ----------------------------------------------------------------------");
show_debug_message("INITIALISATION DE L'ENVIRONNEMENT--------------------------------------------");
//Creation du tableau vide:
for(i=0;i&lt;=7;i++){
    for(j=0;j&lt;=7;j++){
        global.backgrounds[i,j] = "";
        }
    }

show_debug_message("BACKGROUNDS LOADING PHASE--------------------------------------------");
Number = ini_read_real(global.selected_part,"BackgroundsNumber",0);
for(i=1;i&lt;=Number;i++){
    original= ini_read_string(global.selected_part,string(i-1)+"-background","(0,0,sample,0)");
    original = string_replace(original,"(","");
    //DÃ©finition des variables
    for(j=1;j&gt;-1;j++){ //For xaxis:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,0] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,0]= "+global.backgrounds[i-1,0]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,0] = real(global.backgrounds[i-1,0]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For yaxis:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,1] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,1]= "+global.backgrounds[i-1,1]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,1] = real(global.backgrounds[i-1,1]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For Asset:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,2] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,2]= "+global.backgrounds[i-1,2]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,2] = asset_get_index("background_"+global.backgrounds[i-1,2]);
            show_debug_message("background_index= "+string(global.backgrounds[i-1,2]));
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For fore/back:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,3] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,3]= "+global.backgrounds[i-1,3]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,3] = real(global.backgrounds[i-1,3]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For htiled:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,4] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,4]= "+global.backgrounds[i-1,4]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,4] = real(global.backgrounds[i-1,4]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For vtiled:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,5] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,5]= "+global.backgrounds[i-1,5]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,5] = real(global.backgrounds[i-1,5]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For yfromtop:
        if string_char_at(original,1) != ","{
            global.backgrounds[i-1,6] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,",","");
            show_debug_message("global.backgrounds[i-1,6]= "+global.backgrounds[i-1,6]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,6] = real(global.backgrounds[i-1,6]);
            j = -10;
            }
        }
    for(j=1;j&gt;-1;j++){ //For yfromtop:
        if string_char_at(original,1) != ")"{
            global.backgrounds[i-1,7] += string_copy(original,1,1);
            original = string_replace(original,string_char_at(original,1),"");
            }
        else{
            original = string_replace(original,")","");
            show_debug_message("global.backgrounds[i-1,7]= "+global.backgrounds[i-1,7]);
            show_debug_message("original= "+original);
            global.backgrounds[i-1,7] = real(global.backgrounds[i-1,7]);
            j = -10;
            }
        }
    background_visible[i-1] = true;
    background_index[i-1] = global.backgrounds[i-1,2];
    background_foreground[i-1] = global.backgrounds[i-1,3];
    background_htiled[i-1] = global.backgrounds[i-1,4];
    background_vtiled[i-1] = global.backgrounds[i-1,5];
           
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
